openapi: 3.0.0
servers:
  - description: Cluster Endpoint
    url: /api
info:
  description: Pharmacy Prescription management system
  version: "1.0.0"
  title: Pharmacy Prescription API
  contact:
    email: xkabac@stuba.sk
  license:
    name: CC BY 4.0
    url: "https://creativecommons.org/licenses/by/4.0/"
tags:
  - name: prescriptions
    description: Pharmacy Prescription API
  - name: ambulances
    description: Ambulance details
  - name: medicineOrders
    description: Medicine order details
paths:
  "/ambulances":
    post:
      tags:
        - ambulances
      summary: Creates a new ambulance
      operationId: createAmbulance
      description: Use this endpoint to register a new ambulance in the system.
      requestBody:
        description: The ambulance data to register.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ambulance'
      responses:
        "201":
          description: Ambulance created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ambulance'
        "400":
          description: Invalid input provided.
        "409": 
          description: Ambulance with provided id already exists.
    get:
      tags:
        - ambulances
      summary: Retrieves all ambulances
      operationId: getAllAmbulances
      description: Use this endpoint to retrieve a list of all ambulances in the system.
      responses:
        "200":
          description: A list of ambulances was retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ambulance'

  "/ambulances/{ambulanceId}":
    delete:
      tags:
        - ambulances
      summary: Deletes a specific ambulance
      operationId: deleteAmbulance
      description: Use this endpoint to delete a specific ambulance by its ID.
      parameters:
        - in: path
          name: ambulanceId
          description: The ID of the ambulance to delete.
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Ambulance deleted successfully.
        "404":
          description: Ambulance with the provided ID does not exist.

  "/ambulances/{ambulanceId}/prescriptions":
    get:
      tags:
        - prescriptions
      summary: Provides the list of prescriptions for an ambulance
      operationId: getAmbulancePrescriptions
      description: By using ambulanceId, you get the list of prescriptions issued by the ambulance
      parameters:
        - in: path
          name: ambulanceId
          description: Pass the ID of the particular ambulance
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A list of prescriptions for the ambulance
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Prescription"
        "404":
          description: Ambulance with such ID does not exist

    post:
      tags:
        - prescriptions
      summary: Creates a new prescription
      operationId: createPrescription
      description: Use this endpoint to create a new prescription associated with an ambulance.
      parameters:
        - in: path
          name: ambulanceId
          description: The ID of the ambulance where the prescription was issued.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Prescription"
        description: The prescription to create.
        required: true
      responses:
        "201":
          description: Prescription created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prescription"
        "400":
          description: Invalid input provided.
        "404":
          description: Ambulance with the provided ID does not exist.

  "/ambulances/{ambulanceId}/prescriptions/{prescriptionId}":
    get:
      tags:
        - prescriptions
      summary: Retrieves a specific prescription by ID
      operationId: getPrescriptionById
      description: Use this endpoint to retrieve details of a specific prescription by its ID and ambulanceId.
      parameters:
        - in: path
          name: ambulanceId
          description: The ID of the ambulance associated with the prescription.
          required: true
          schema:
            type: string
        - in: path
          name: prescriptionId
          description: The ID of the prescription to retrieve.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Prescription retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prescription"
        "404":
          description: Prescription or ambulance with the provided ID does not exist.

    put:
      tags:
        - prescriptions
      summary: Updates a specific prescription
      operationId: updatePrescription
      description: Use this endpoint to update details of a specific prescription.
      parameters:
        - in: path
          name: ambulanceId
          description: The ID of the ambulance associated with the prescription.
          required: true
          schema:
            type: string
        - in: path
          name: prescriptionId
          description: The ID of the prescription to update.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Prescription"
        description: The updated prescription details.
        required: true
      responses:
        "200":
          description: Prescription updated successfully.
        "400":
          description: Invalid input provided.
        "404":
          description: Prescription or ambulance with the provided ID does not exist.

    delete:
      tags:
        - prescriptions
      summary: Deletes a specific prescription
      operationId: deletePrescription
      description: Use this endpoint to delete a specific prescription by its ID.
      parameters:
        - in: path
          name: ambulanceId
          description: The ID of the ambulance associated with the prescription to delete.
          required: true
          schema:
            type: string
        - in: path
          name: prescriptionId
          description: The ID of the prescription to delete.
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Prescription deleted successfully.
        "404":
          description: Prescription or ambulance with the provided ID does not exist.

  "/ambulances/{ambulanceId}/medicineOrders":
    post:
      tags:
        - medicineOrders
      summary: Creates a new medicine order
      operationId: createMedicineOrder
      description: Use this endpoint to create a new medicine order associated with an ambulance.
      parameters:
        - in: path
          name: ambulanceId
          description: The ID of the ambulance where the medicine order was issued.
          required: true
          schema:
            type: string
      requestBody:
        description: The medicine order data to create.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicineOrder'
      responses:
        "201":
          description: Medicine order created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicineOrder'
        "400":
          description: Invalid input provided.
        "404":
          description: Ambulance with the provided ID does not exist.

    get:
      tags:
        - medicineOrders
      summary: Retrieves all medicine orders for an ambulance
      operationId: getAllMedicineOrders
      description: Use this endpoint to retrieve a list of all medicine orders associated with an ambulance.
      parameters:
        - in: path
          name: ambulanceId
          description: The ID of the ambulance to retrieve medicine orders for.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A list of medicine orders was retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicineOrder'
        "404":
          description: Ambulance with the provided ID does not exist.

  "/ambulances/{ambulanceId}/medicineOrders/{orderId}":
    get:
      tags:
        - medicineOrders
      summary: Retrieves a specific medicine order by ID
      operationId: getMedicineOrderById
      description: Use this endpoint to retrieve details of a specific medicine order by its ID and ambulanceId.
      parameters:
        - in: path
          name: ambulanceId
          description: The ID of the ambulance associated with the medicine order.
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          description: The ID of the medicine order to retrieve.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Medicine order retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicineOrder'
        "404":
          description: Medicine order or ambulance with the provided ID does not exist.

    put:
      tags:
        - medicineOrders
      summary: Updates a specific medicine order
      operationId: updateMedicineOrder
      description: Use this endpoint to update details of a specific medicine order.
      parameters:
        - in: path
          name: ambulanceId
          description: The ID of the ambulance associated with the medicine order.
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          description: The ID of the medicine order to update.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MedicineOrder"
        description: The updated medicine order details.
        required: true
      responses:
        "200":
          description: Medicine order updated successfully.
        "400":
          description: Invalid input provided.
        "404":
          description: Medicine order or ambulance with the provided ID does not exist.

    delete:
      tags:
        - medicineOrders
      summary: Deletes a specific medicine order
      operationId: deleteMedicineOrder
      description: Use this endpoint to delete a specific medicine order by its ID.
      parameters:
        - in: path
          name: ambulanceId
          description: The ID of the ambulance associated with the medicine order to delete.
          required: true
          schema:
            type: string
        - in: path
          name: orderId
          description: The ID of the medicine order to delete.
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Medicine order deleted successfully.
        "404":
          description: Medicine order or ambulance with the provided ID does not exist.

components:
  schemas:
    Prescription:
      type: object
      required: [id, patientName, patientId, doctorName, issuedDate, validUntil, medicines, status]
      properties:
        id:
          type: string
          example: RX123456789
        patientName:
          type: string
          example: John Smith
        patientId:
          type: string
          example: MD0213213
        doctorName:
          type: string
          example: Dr. Dutoschwarz
        issuedDate:
          type: string
          format: date-time
          example: "2038-12-24T10:35:00Z"
        validUntil:
          type: string
          format: date-time
          example: "2038-12-24T10:35:00Z"
        medicines:
          type: array
          items:
            $ref: '#/components/schemas/Medicine'
        status:
          type: string
          example: partially dispensed
        instructions:
          type: string
          example: Take one tablet three times a day after meals.
        notes:
          type: string
          example: Patient allergic to penicillin. Adjusted medication accordingly.

    Ambulance:
      type: object
      required: ["id", "name"]
      properties:
        id:
          type: string
          example: ambulance-petrzalka
          description: Unique identifier for the ambulance
        name: 
          type: string
          example: Ambulancia Dr. House, Petrzalka
          description: Human readable display name of the ambulance
        prescriptionList:
          type: array
          items:
            $ref: '#/components/schemas/Prescription'
        medicineOrderList:
          type: array
          items:
            $ref: '#/components/schemas/MedicineOrder'
      example: 
        $ref: '#components/examples/AmbulanceExample'

    Medicine:
      type: object
      required: [name]
      properties:
        name:
          type: string
          example: Amoxicillin

    MedicineOrder:
      type: object
      required: [orderId, orderDate, orderedBy, medicines]
      properties:
        orderId:
          type: string
          example: ORD123456789
        orderDate:
          type: string
          format: date-time
          example: "2024-05-18T12:00:00Z"
        orderedBy:
          type: string
          example: "Dr. House"
        notes:
          type: string
        state:
          type: string
          enum: [pending, shipped, delivered]
          example: pending
        medicines:
          type: array
          items:
            $ref: '#/components/schemas/Medicine'
      example:
        orderId: ORD123456789
        orderDate: "2024-05-18T12:00:00Z"
        orderedBy: "Dr. House"
        notes: "Delivery in 3 days"
        state: "pending"
        medicines:
          - name: Amoxicillin

  examples:
    AmbulanceExample:
      summary: Sample GP ambulance
      description: |
        Example of GP ambulance with waiting list and predefined conditions.
      value: 
        id: gp-house
        name: "Ambulancia vseobecneho lekarstva Dr. House"
        prescriptionList:
          - id: RX123456789
            patientName: John Smith
            doctorName: Dr. House
            issuedDate: "2024-04-01"
            validUntil: "2024-06-01"
            medicines:
              - name: Amoxicillin
            status: "partially dispensed"
            instructions: "Take one tablet three times a day after meals."
            ambulanceId: "gp-house"
            notes: "Patient allergic to penicillin. Adjusted medication accordingly."
          - id: RX987654321
            patientName: Alice Johnson
            doctorName: Dr. House
            issuedDate: "2038-12-24T10:35:00Z"
            validUntil: "2038-12-24T10:35:00Z"
            medicines:
              - name: Ibuprofen
            status: "dispensed"
            instructions: "Take two tablets twice a day."
            ambulanceId: "gp-house"
            notes: "Check blood pressure regularly while on medication."
        medicineOrderList:
          - orderId: ORD123456789
            orderDate: "2024-05-18T12:00:00Z"
            orderedBy: "Dr. House"
            notes: "Delivery in 3 days"
            state: "pending"
            medicines:
              - name: Amoxicillin
